<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.29.5576.13786" Name="CUDA" DebugInfo="false" HasCudaSourceCode="false" HasPTX="false" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES />
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="68580a4d-a593-471a-96d4-bd2584b35432" Language="OpenCL" Arch="OpenCL">I2lmIGRlZmluZWQoY2xfa2hyX2ZwNjQpDQojcHJhZ21hIE9QRU5DTCBFWFRFTlNJT04gY2xfa2hyX2ZwNjQ6IGVuYWJsZQ0KI2VsaWYgZGVmaW5lZChjbF9hbWRfZnA2NCkNCiNwcmFnbWEgT1BFTkNMIEVYVEVOU0lPTiBjbF9hbWRfZnA2NDogZW5hYmxlDQojZW5kaWYNCnN0cnVjdCBDVURBQm9keV9TdHJ1Y3QNCnsNCglkb3VibGUgTG9jWDsNCglkb3VibGUgTG9jWTsNCglmbG9hdCBNYXNzOw0KCWZsb2F0IFNwZWVkWDsNCglmbG9hdCBTcGVlZFk7DQoJZmxvYXQgRm9yY2VYOw0KCWZsb2F0IEZvcmNlWTsNCglmbG9hdCBGb3JjZVRvdDsNCglpbnQgQ29sb3I7DQoJZG91YmxlIFNpemU7DQoJaW50IFZpc2libGU7DQoJaW50IEluUm9jaGU7DQoJaW50IEJsYWNrSG9sZTsNCglsb25nIFVJRDsNCn07DQoNCg0KLy8gUGh5c2ljc19FbmdpbmUuQ1VEQQ0KX19rZXJuZWwgIHZvaWQgQ2FsY1BoeXNpY3MoZ2xvYmFsIHN0cnVjdCBDVURBQm9keV9TdHJ1Y3QqIEJvZHksIGludCBCb2R5TGVuMCwgZmxvYXQgVGltZVN0ZXAsIGdsb2JhbCBzdHJ1Y3QgQ1VEQUJvZHlfU3RydWN0KiBPdXRCb2R5LCBpbnQgT3V0Qm9keUxlbjApOw0KLy8gUGh5c2ljc19FbmdpbmUuQ1VEQQ0KX19rZXJuZWwgIHZvaWQgQ29sbGlkZUJvZGllcyhnbG9iYWwgc3RydWN0IENVREFCb2R5X1N0cnVjdCogQm9keSwgaW50IEJvZHlMZW4wLCBnbG9iYWwgc3RydWN0IENVREFCb2R5X1N0cnVjdCogQ29sQm9keSwgaW50IENvbEJvZHlMZW4wLCBmbG9hdCBUaW1lU3RlcCk7DQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBJbnRlZ3JhdGUoZ2xvYmFsIHN0cnVjdCBDVURBQm9keV9TdHJ1Y3QqIEJvZHksIGludCBCb2R5TGVuMCwgZmxvYXQgVGltZVN0ZXApOw0KDQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBDYWxjUGh5c2ljcyhnbG9iYWwgc3RydWN0IENVREFCb2R5X1N0cnVjdCogQm9keSwgaW50IEJvZHlMZW4wLCBmbG9hdCBUaW1lU3RlcCwgZ2xvYmFsIHN0cnVjdCBDVURBQm9keV9TdHJ1Y3QqIE91dEJvZHksIGludCBPdXRCb2R5TGVuMCkNCnsNCglpbnQgbnVtID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJZmxvYXQgbnVtMiA9IDEuMGY7DQoJYm9vbCBmbGFnID0gbnVtIDw9IEJvZHlMZW4wIC0gMTsNCglpZiAoZmxhZykNCgl7DQoJCWZsb2F0IG51bTMgPSBCb2R5WyhudW0pXS5Gb3JjZVg7DQoJCWZsb2F0IG51bTQgPSBCb2R5WyhudW0pXS5Gb3JjZVk7DQoJCWZsb2F0IG51bTUgPSBCb2R5WyhudW0pXS5Gb3JjZVRvdDsNCgkJZmxvYXQgbnVtNiA9IChmbG9hdClCb2R5WyhudW0pXS5Mb2NYOw0KCQlmbG9hdCBudW03ID0gKGZsb2F0KUJvZHlbKG51bSldLkxvY1k7DQoJCWZsb2F0IG1hc3MgPSBCb2R5WyhudW0pXS5NYXNzOw0KCQlib29sIGZsYWcyID0gQm9keVsobnVtKV0uVmlzaWJsZSA9PSAxOw0KCQlpZiAoZmxhZzIpDQoJCXsNCgkJCW51bTMgPSAwLjBmOw0KCQkJbnVtNCA9IDAuMGY7DQoJCQludW01ID0gMC4wZjsNCgkJCWludCBudW04ID0gQm9keUxlbjAgLSAxOw0KCQkJZm9yIChpbnQgaSA9IDA7IGkgPD0gbnVtODsgaSsrKQ0KCQkJew0KCQkJCWJvb2wgZmxhZzMgPSBudW0gIT0gaSAmIEJvZHlbKGkpXS5WaXNpYmxlID09IDE7DQoJCQkJaWYgKGZsYWczKQ0KCQkJCXsNCgkJCQkJZmxvYXQgbnVtOSA9IChmbG9hdCkoQm9keVsoaSldLkxvY1ggLSAoZG91YmxlKW51bTYpOw0KCQkJCQlmbG9hdCBudW0xMCA9IChmbG9hdCkoQm9keVsoaSldLkxvY1kgLSAoZG91YmxlKW51bTcpOw0KCQkJCQlmbG9hdCBudW0xMSA9IG51bTkgKiBudW05ICsgbnVtMTAgKiBudW0xMDsNCgkJCQkJZmxvYXQgbnVtMTIgPSAoZmxvYXQpc3FydCgoZG91YmxlKW51bTExKTsNCgkJCQkJYm9vbCBmbGFnNCA9IG51bTEyID4gMC4wZjsNCgkJCQkJaWYgKGZsYWc0KQ0KCQkJCQl7DQoJCQkJCQlmbG9hdCBudW0xMyA9IG1hc3M7DQoJCQkJCQlmbG9hdCBtYXNzMiA9IEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJZmxvYXQgbnVtMTQgPSBudW0xMyAqIG1hc3MyOw0KCQkJCQkJZmxvYXQgbnVtMTUgPSBudW0xNCAvIChudW0xMiAqIG51bTEyICsgbnVtMik7DQoJCQkJCQlmbG9hdCBudW0xNiA9IG51bTE1ICogbnVtOSAvIG51bTEyOw0KCQkJCQkJZmxvYXQgbnVtMTcgPSBudW0xNSAqIG51bTEwIC8gbnVtMTI7DQoJCQkJCQludW01ICs9IG51bTE1Ow0KCQkJCQkJbnVtMyArPSBudW0xNjsNCgkJCQkJCW51bTQgKz0gbnVtMTc7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCQlPdXRCb2R5WyhudW0pXS5Gb3JjZVggPSBudW0zOw0KCQkJT3V0Qm9keVsobnVtKV0uRm9yY2VZID0gbnVtNDsNCgkJCU91dEJvZHlbKG51bSldLkZvcmNlVG90ID0gbnVtNTsNCgkJCWJvb2wgZmxhZzUgPSBPdXRCb2R5WyhudW0pXS5Gb3JjZVRvdCA+IE91dEJvZHlbKG51bSldLk1hc3MgKiA2LjBmICYgT3V0Qm9keVsobnVtKV0uQmxhY2tIb2xlID09IDA7DQoJCQlpZiAoZmxhZzUpDQoJCQl7DQoJCQkJT3V0Qm9keVsobnVtKV0uSW5Sb2NoZSA9IDA7DQoJCQl9DQoJCQllbHNlDQoJCQl7DQoJCQkJYm9vbCBmbGFnNiA9IE91dEJvZHlbKG51bSldLkZvcmNlVG90ICogMi4wZiA8IE91dEJvZHlbKG51bSldLk1hc3MgKiA0LjBmOw0KCQkJCWlmIChmbGFnNikNCgkJCQl7DQoJCQkJCU91dEJvZHlbKG51bSldLkluUm9jaGUgPSAwOw0KCQkJCX0NCgkJCQllbHNlDQoJCQkJew0KCQkJCQlib29sIGZsYWc3ID0gT3V0Qm9keVsobnVtKV0uQmxhY2tIb2xlID09IDI7DQoJCQkJCWlmIChmbGFnNykNCgkJCQkJew0KCQkJCQkJT3V0Qm9keVsobnVtKV0uSW5Sb2NoZSA9IDE7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCQliYXJyaWVyKENMS19MT0NBTF9NRU1fRkVOQ0UpOw0KCQl9DQoJfQ0KfQ0KLy8gUGh5c2ljc19FbmdpbmUuQ1VEQQ0KX19rZXJuZWwgIHZvaWQgQ29sbGlkZUJvZGllcyhnbG9iYWwgc3RydWN0IENVREFCb2R5X1N0cnVjdCogQm9keSwgaW50IEJvZHlMZW4wLCBnbG9iYWwgc3RydWN0IENVREFCb2R5X1N0cnVjdCogQ29sQm9keSwgaW50IENvbEJvZHlMZW4wLCBmbG9hdCBUaW1lU3RlcCkNCnsNCglpbnQgbnVtID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJYm9vbCBmbGFnID0gbnVtIDw9IEJvZHlMZW4wIC0gMSAmIEJvZHlbKG51bSldLlZpc2libGUgPT0gMTsNCglpZiAoZmxhZykNCgl7DQoJCWZsb2F0IG51bTIgPSAoZmxvYXQpQm9keVsobnVtKV0uTG9jWDsNCgkJZmxvYXQgbnVtMyA9IChmbG9hdClCb2R5WyhudW0pXS5Mb2NZOw0KCQlmbG9hdCBudW00ID0gQm9keVsobnVtKV0uU3BlZWRYOw0KCQlmbG9hdCBudW01ID0gQm9keVsobnVtKV0uU3BlZWRZOw0KCQlmbG9hdCBudW02ID0gQm9keVsobnVtKV0uTWFzczsNCgkJaW50IGluUm9jaGUgPSBCb2R5WyhudW0pXS5JblJvY2hlOw0KCQlsb25nIHVJRCA9IEJvZHlbKG51bSldLlVJRDsNCgkJZmxvYXQgbnVtNyA9IChmbG9hdClCb2R5WyhudW0pXS5TaXplOw0KCQlpbnQgbnVtOCA9IEJvZHlMZW4wIC0gMTsNCgkJZm9yIChpbnQgaSA9IDA7IGkgPD0gbnVtODsgaSsrKQ0KCQl7DQoJCQlmbG9hdCBudW05ID0gKGZsb2F0KUJvZHlbKGkpXS5Mb2NYOw0KCQkJZmxvYXQgbnVtMTAgPSAoZmxvYXQpQm9keVsoaSldLkxvY1k7DQoJCQlmbG9hdCBzcGVlZFggPSBCb2R5WyhpKV0uU3BlZWRYOw0KCQkJZmxvYXQgc3BlZWRZID0gQm9keVsoaSldLlNwZWVkWTsNCgkJCWZsb2F0IG1hc3MgPSBCb2R5WyhpKV0uTWFzczsNCgkJCWludCBpblJvY2hlMiA9IEJvZHlbKGkpXS5JblJvY2hlOw0KCQkJbG9uZyB1SUQyID0gQm9keVsoaSldLlVJRDsNCgkJCWZsb2F0IG51bTExID0gKGZsb2F0KUJvZHlbKGkpXS5TaXplOw0KCQkJYm9vbCBmbGFnMiA9IG51bSAhPSBpICYgQm9keVsoaSldLlZpc2libGUgPT0gMTsNCgkJCWlmIChmbGFnMikNCgkJCXsNCgkJCQlmbG9hdCBudW0xMiA9IG51bTkgLSBudW0yOw0KCQkJCWZsb2F0IG51bTEzID0gbnVtMTAgLSBudW0zOw0KCQkJCWZsb2F0IG51bTE0ID0gbnVtMTIgKiBudW0xMiArIG51bTEzICogbnVtMTM7DQoJCQkJZmxvYXQgbnVtMTUgPSAoZmxvYXQpc3FydCgoZG91YmxlKW51bTE0KTsNCgkJCQlib29sIGZsYWczID0gKGRvdWJsZSludW0xNSA8PSAoZG91YmxlKW51bTcgKiAwLjUgKyAoZG91YmxlKW51bTExICogMC41Ow0KCQkJCWlmIChmbGFnMykNCgkJCQl7DQoJCQkJCWJvb2wgZmxhZzQgPSBudW0xNSA+IDAuMGY7DQoJCQkJCWlmIChmbGFnNCkNCgkJCQkJew0KCQkJCQkJYm9vbCBmbGFnNSA9IGluUm9jaGUgPT0gMCAmIGluUm9jaGUyID09IDE7DQoJCQkJCQlpZiAoZmxhZzUpDQoJCQkJCQl7DQoJCQkJCQkJZmxvYXQgbnVtMTYgPSBudW00Ow0KCQkJCQkJCWZsb2F0IG51bTE3ID0gbnVtNTsNCgkJCQkJCQlmbG9hdCBudW0xOCA9IHNwZWVkWDsNCgkJCQkJCQlmbG9hdCBudW0xOSA9IHNwZWVkWTsNCgkJCQkJCQlmbG9hdCBudW0yMCA9IG51bTY7DQoJCQkJCQkJZmxvYXQgbnVtMjEgPSBtYXNzOw0KCQkJCQkJCWZsb2F0IG51bTIyID0gbnVtMTIgKiAobnVtMTggLSBudW0xNikgKyBudW0xMyAqIChudW0xOSAtIG51bTE3KTsNCgkJCQkJCQlmbG9hdCBudW0yMyA9IG51bTIyIC8gbnVtMTQ7DQoJCQkJCQkJZmxvYXQgbnVtMjQgPSBudW0xMiAqIG51bTIzOw0KCQkJCQkJCWZsb2F0IG51bTI1ID0gbnVtMTMgKiBudW0yMzsNCgkJCQkJCQlmbG9hdCBudW0yNiA9IG51bTIwICsgbnVtMjE7DQoJCQkJCQkJZmxvYXQgbnVtMjcgPSAyLjBmICogbnVtMjEgLyBudW0yNjsNCgkJCQkJCQlmbG9hdCBudW0yOCA9IDIuMGYgKiBudW0yMCAvIG51bTI2Ow0KCQkJCQkJCWJvb2wgZmxhZzYgPSBudW02ID4gbWFzczsNCgkJCQkJCQlpZiAoZmxhZzYpDQoJCQkJCQkJew0KCQkJCQkJCQludW00ICs9IG51bTI4ICogbnVtMjQ7DQoJCQkJCQkJCW51bTUgKz0gbnVtMjggKiBudW0yNTsNCgkJCQkJCQkJZmxvYXQgbnVtMjkgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCWZsb2F0IG51bTMwID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApKTsNCgkJCQkJCQkJbnVtMjkgKz0gbnVtMzA7DQoJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMjkgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJbnVtNiArPSBtYXNzOw0KCQkJCQkJCX0NCgkJCQkJCQllbHNlDQoJCQkJCQkJew0KCQkJCQkJCQlib29sIGZsYWc3ID0gbnVtNiA9PSBtYXNzOw0KCQkJCQkJCQlpZiAoZmxhZzcpDQoJCQkJCQkJCXsNCgkJCQkJCQkJCWJvb2wgZmxhZzggPSB1SUQgPiB1SUQyOw0KCQkJCQkJCQkJaWYgKGZsYWc4KQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCW51bTQgKz0gbnVtMjggKiBudW0yNDsNCgkJCQkJCQkJCQludW01ICs9IG51bTI4ICogbnVtMjU7DQoJCQkJCQkJCQkJZmxvYXQgbnVtMjkgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQkJZmxvYXQgbnVtMzAgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCQkJCW51bTI5ICs9IG51bTMwOw0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMjkgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJCQludW02ICs9IG1hc3M7DQoJCQkJCQkJCQl9DQoJCQkJCQkJCQllbHNlDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQkJCQl9DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJfQ0KCQkJCQkJCX0NCgkJCQkJCX0NCgkJCQkJCWVsc2UNCgkJCQkJCXsNCgkJCQkJCQlib29sIGZsYWc5ID0gaW5Sb2NoZSA9PSAwICYgaW5Sb2NoZTIgPT0gMDsNCgkJCQkJCQlpZiAoZmxhZzkpDQoJCQkJCQkJew0KCQkJCQkJCQlmbG9hdCBudW0xNiA9IG51bTQ7DQoJCQkJCQkJCWZsb2F0IG51bTE3ID0gbnVtNTsNCgkJCQkJCQkJZmxvYXQgbnVtMTggPSBzcGVlZFg7DQoJCQkJCQkJCWZsb2F0IG51bTE5ID0gc3BlZWRZOw0KCQkJCQkJCQlmbG9hdCBudW0yMCA9IG51bTY7DQoJCQkJCQkJCWZsb2F0IG51bTIxID0gbWFzczsNCgkJCQkJCQkJZmxvYXQgbnVtMjIgPSBudW0xMiAqIChudW0xOCAtIG51bTE2KSArIG51bTEzICogKG51bTE5IC0gbnVtMTcpOw0KCQkJCQkJCQlmbG9hdCBudW0yMyA9IG51bTIyIC8gbnVtMTQ7DQoJCQkJCQkJCWZsb2F0IG51bTI0ID0gbnVtMTIgKiBudW0yMzsNCgkJCQkJCQkJZmxvYXQgbnVtMjUgPSBudW0xMyAqIG51bTIzOw0KCQkJCQkJCQlmbG9hdCBudW0yNiA9IG51bTIwICsgbnVtMjE7DQoJCQkJCQkJCWZsb2F0IG51bTI3ID0gMi4wZiAqIG51bTIwIC8gbnVtMjY7DQoJCQkJCQkJCWZsb2F0IG51bTI4ID0gMi4wZiAqIG51bTIxIC8gbnVtMjY7DQoJCQkJCQkJCWJvb2wgZmxhZzEwID0gbnVtNiA+IG1hc3M7DQoJCQkJCQkJCWlmIChmbGFnMTApDQoJCQkJCQkJCXsNCgkJCQkJCQkJCW51bTQgKz0gbnVtMjggKiBudW0yNDsNCgkJCQkJCQkJCW51bTUgKz0gbnVtMjggKiBudW0yNTsNCgkJCQkJCQkJCWZsb2F0IG51bTI5ID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCQkJZmxvYXQgbnVtMzAgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCQkJbnVtMjkgKz0gbnVtMzA7DQoJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5TaXplID0gc3FydCgoZG91YmxlKW51bTI5IC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCQludW02ICs9IG1hc3M7DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib29sIGZsYWcxMSA9IG51bTYgPT0gbWFzczsNCgkJCQkJCQkJCWlmIChmbGFnMTEpDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJYm9vbCBmbGFnMTIgPSB1SUQgPiB1SUQyOw0KCQkJCQkJCQkJCWlmIChmbGFnMTIpDQoJCQkJCQkJCQkJew0KCQkJCQkJCQkJCQludW00ICs9IG51bTI4ICogbnVtMjQ7DQoJCQkJCQkJCQkJCW51bTUgKz0gbnVtMjggKiBudW0yNTsNCgkJCQkJCQkJCQkJZmxvYXQgbnVtMjkgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQkJCWZsb2F0IG51bTMwID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApKTsNCgkJCQkJCQkJCQkJbnVtMjkgKz0gbnVtMzA7DQoJCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMjkgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJCQkJbnVtNiArPSBtYXNzOw0KCQkJCQkJCQkJCX0NCgkJCQkJCQkJCQllbHNlDQoJCQkJCQkJCQkJew0KCQkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJCQl9DQoJCQkJCQkJCQl9DQoJCQkJCQkJCQllbHNlDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQkJCQl9DQoJCQkJCQkJCX0NCgkJCQkJCQl9DQoJCQkJCQkJZWxzZQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnMTMgPSBpblJvY2hlID09IDEgJiBpblJvY2hlMiA9PSAxOw0KCQkJCQkJCQlpZiAoZmxhZzEzKQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlmbG9hdCBudW0zMSA9IChmbG9hdCkoKGRvdWJsZSludW03ICogMC41ICsgKGRvdWJsZSludW0xMSAqIDAuNSk7DQoJCQkJCQkJCQlmbG9hdCBudW0zMiA9IG51bTEyIC8gbnVtMTU7DQoJCQkJCQkJCQlmbG9hdCBudW0zMyA9IG51bTEzIC8gbnVtMTU7DQoJCQkJCQkJCQlmbG9hdCBudW0zNCA9IHNwZWVkWCAtIG51bTQ7DQoJCQkJCQkJCQlmbG9hdCBudW0zNSA9IHNwZWVkWSAtIG51bTU7DQoJCQkJCQkJCQlmbG9hdCBudW0zNiA9IDIuMGY7DQoJCQkJCQkJCQlmbG9hdCBudW0zNyA9IC1udW0zNiAqIChudW0zMSAtIG51bTE1KSAqIG51bTMyICogbWFzczsNCgkJCQkJCQkJCWZsb2F0IG51bTM4ID0gLW51bTM2ICogKG51bTMxIC0gbnVtMTUpICogbnVtMzMgKiBtYXNzOw0KCQkJCQkJCQkJZmxvYXQgbnVtMzkgPSAwLjAzZjsNCgkJCQkJCQkJCW51bTM3ICs9IG51bTM5ICogbnVtMzQ7DQoJCQkJCQkJCQludW0zOCArPSBudW0zOSAqIG51bTM1Ow0KCQkJCQkJCQkJbnVtNCArPSBudW0zNzsNCgkJCQkJCQkJCW51bTUgKz0gbnVtMzg7DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib29sIGZsYWcxNCA9IGluUm9jaGUgPT0gMSAmIGluUm9jaGUyID09IDA7DQoJCQkJCQkJCQlpZiAoZmxhZzE0KQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQl9DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWVsc2UNCgkJCQkJew0KCQkJCQkJYm9vbCBmbGFnMTUgPSBudW02ID4gbWFzczsNCgkJCQkJCWlmIChmbGFnMTUpDQoJCQkJCQl7DQoJCQkJCQkJZmxvYXQgbnVtMjkgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJZmxvYXQgbnVtMzAgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCW51bTI5ICs9IG51bTMwOw0KCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMjkgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQludW02ICs9IG1hc3M7DQoJCQkJCQl9DQoJCQkJCQllbHNlDQoJCQkJCQl7DQoJCQkJCQkJQ29sQm9keVsobnVtKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgkJQ29sQm9keVsobnVtKV0uU3BlZWRYID0gbnVtNDsNCgkJQ29sQm9keVsobnVtKV0uU3BlZWRZID0gbnVtNTsNCgkJQ29sQm9keVsobnVtKV0uTG9jWCA9IChkb3VibGUpbnVtMjsNCgkJQ29sQm9keVsobnVtKV0uTG9jWSA9IChkb3VibGUpbnVtMzsNCgkJQ29sQm9keVsobnVtKV0uTWFzcyA9IG51bTY7DQoJfQ0KCWJhcnJpZXIoQ0xLX0xPQ0FMX01FTV9GRU5DRSk7DQp9DQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBJbnRlZ3JhdGUoZ2xvYmFsIHN0cnVjdCBDVURBQm9keV9TdHJ1Y3QqIEJvZHksIGludCBCb2R5TGVuMCwgZmxvYXQgVGltZVN0ZXApDQp7DQoJaW50IG51bSA9IGdldF9sb2NhbF9zaXplKDApICogZ2V0X2dyb3VwX2lkKDApICsgZ2V0X2xvY2FsX2lkKDApOw0KCWludCBleHByXzMxX2NwXzBfY3BfMSA9IG51bTsNCglCb2R5WyhleHByXzMxX2NwXzBfY3BfMSldLlNwZWVkWCA9IEJvZHlbKGV4cHJfMzFfY3BfMF9jcF8xKV0uU3BlZWRYICsgVGltZVN0ZXAgKiBCb2R5WyhudW0pXS5Gb3JjZVggLyBCb2R5WyhudW0pXS5NYXNzOw0KCWludCBleHByXzVFX2NwXzBfY3BfMSA9IG51bTsNCglCb2R5WyhleHByXzVFX2NwXzBfY3BfMSldLlNwZWVkWSA9IEJvZHlbKGV4cHJfNUVfY3BfMF9jcF8xKV0uU3BlZWRZICsgVGltZVN0ZXAgKiBCb2R5WyhudW0pXS5Gb3JjZVkgLyBCb2R5WyhudW0pXS5NYXNzOw0KCWludCBleHByXzhCX2NwXzBfY3BfMSA9IG51bTsNCglCb2R5WyhleHByXzhCX2NwXzBfY3BfMSldLkxvY1ggPSBCb2R5WyhleHByXzhCX2NwXzBfY3BfMSldLkxvY1ggKyAoZG91YmxlKShUaW1lU3RlcCAqIEJvZHlbKG51bSldLlNwZWVkWCk7DQoJaW50IGV4cHJfQUNfY3BfMF9jcF8xID0gbnVtOw0KCUJvZHlbKGV4cHJfQUNfY3BfMF9jcF8xKV0uTG9jWSA9IEJvZHlbKGV4cHJfQUNfY3BfMF9jcF8xKV0uTG9jWSArIChkb3VibGUpKFRpbWVTdGVwICogQm9keVsobnVtKV0uU3BlZWRZKTsNCgliYXJyaWVyKENMS19MT0NBTF9NRU1fRkVOQ0UpOw0KfQ0K</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="CalcPhysics" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2170202541</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Single" Name="TimeStep" Position="2" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="OutBody" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CollideBodies" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2170202541</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="ColBody" Position="2" />
        <Parameter Type="System.Single" Name="TimeStep" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Integrate" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2170202541</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Single" Name="TimeStep" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types>
    <CudafyType Name="Body_Struct" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA+Body_Struct</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2170202541</Checksum>
    </CudafyType>
  </Types>
</CudafyModule>