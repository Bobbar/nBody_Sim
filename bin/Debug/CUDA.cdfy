<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.29.5576.13786" Name="CUDA" DebugInfo="false" HasCudaSourceCode="false" HasPTX="false" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES />
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="3c635973-f3cc-4dc3-ad0c-b85b0865016e" Language="OpenCL" Arch="OpenCL"></SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="CalcPhysics" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>1255433358</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Single" Name="TimeStep" Position="2" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="OutBody" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CollideBodies" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>1255433358</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="ColBody" Position="2" />
        <Parameter Type="System.Single" Name="TimeStep" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="Integrate" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>1255433358</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Body_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Single" Name="TimeStep" Position="2" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types>
    <CudafyType Name="Body_Struct" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA+Body_Struct</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>1255433358</Checksum>
    </CudafyType>
  </Types>
</CudafyModule>