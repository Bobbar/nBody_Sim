<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.29.5576.13786" Name="CUDA" DebugInfo="false" HasCudaSourceCode="false" HasPTX="false" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES />
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="aa0f09b6-14cd-4dfe-bf5c-5a484c3a1ef7" Language="OpenCL" Arch="OpenCL">I2lmIGRlZmluZWQoY2xfa2hyX2ZwNjQpDQojcHJhZ21hIE9QRU5DTCBFWFRFTlNJT04gY2xfa2hyX2ZwNjQ6IGVuYWJsZQ0KI2VsaWYgZGVmaW5lZChjbF9hbWRfZnA2NCkNCiNwcmFnbWEgT1BFTkNMIEVYVEVOU0lPTiBjbF9hbWRfZnA2NDogZW5hYmxlDQojZW5kaWYNCnN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QNCnsNCglkb3VibGUgTG9jWDsNCglkb3VibGUgTG9jWTsNCglmbG9hdCBNYXNzOw0KCWZsb2F0IFNwZWVkWDsNCglmbG9hdCBTcGVlZFk7DQoJZmxvYXQgRm9yY2VYOw0KCWZsb2F0IEZvcmNlWTsNCglmbG9hdCBGb3JjZVRvdDsNCglpbnQgQ29sb3I7DQoJZG91YmxlIFNpemU7DQoJaW50IFZpc2libGU7DQoJaW50IEluUm9jaGU7DQoJaW50IEJsYWNrSG9sZTsNCglsb25nIFVJRDsNCglpbnQgVGhyZWFkSUQ7DQoJaW50IEJsb2NrSUQ7DQoJaW50IEJsb2NrRElNOw0KCWludCBMYXN0Q29sSUQ7DQp9Ow0KDQoNCi8vIFBoeXNpY3NfRW5naW5lLkNVREENCl9fa2VybmVsICB2b2lkIENhbGNQaHlzaWNzKGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBCb2R5LCBpbnQgQm9keUxlbjAsIGZsb2F0IFRpbWVTdGVwLCBnbG9iYWwgc3RydWN0IENVREFQcmltX1N0cnVjdCogT3V0Qm9keSwgaW50IE91dEJvZHlMZW4wKTsNCi8vIFBoeXNpY3NfRW5naW5lLkNVREENCl9fa2VybmVsICB2b2lkIENvbGxpZGVCb2RpZXMoZ2xvYmFsIHN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QqIEJvZHksIGludCBCb2R5TGVuMCwgZ2xvYmFsIHN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QqIENvbEJvZHksIGludCBDb2xCb2R5TGVuMCwgZmxvYXQgVGltZVN0ZXApOw0KDQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBDYWxjUGh5c2ljcyhnbG9iYWwgc3RydWN0IENVREFQcmltX1N0cnVjdCogQm9keSwgaW50IEJvZHlMZW4wLCBmbG9hdCBUaW1lU3RlcCwgZ2xvYmFsIHN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QqIE91dEJvZHksIGludCBPdXRCb2R5TGVuMCkNCnsNCglpbnQgbnVtID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJZmxvYXQgbnVtMiA9IDIuMGY7DQoJYm9vbCBmbGFnID0gbnVtIDw9IEJvZHlMZW4wIC0gMTsNCglpZiAoZmxhZykNCgl7DQoJCU91dEJvZHlbKG51bSldID0gQm9keVsobnVtKV07DQoJCWJvb2wgZmxhZzIgPSBCb2R5WyhudW0pXS5WaXNpYmxlID09IDE7DQoJCWlmIChmbGFnMikNCgkJew0KCQkJT3V0Qm9keVsobnVtKV0uRm9yY2VYID0gMC4wZjsNCgkJCU91dEJvZHlbKG51bSldLkZvcmNlWSA9IDAuMGY7DQoJCQlPdXRCb2R5WyhudW0pXS5Gb3JjZVRvdCA9IDAuMGY7DQoJCQlpbnQgbnVtMyA9IEJvZHlMZW4wIC0gMTsNCgkJCWZvciAoaW50IGkgPSAwOyBpIDw9IG51bTM7IGkrKykNCgkJCXsNCgkJCQlib29sIGZsYWczID0gbnVtICE9IGkgJiBCb2R5WyhpKV0uVmlzaWJsZSA9PSAxOw0KCQkJCWlmIChmbGFnMykNCgkJCQl7DQoJCQkJCWZsb2F0IG51bTQgPSAoZmxvYXQpKEJvZHlbKGkpXS5Mb2NYIC0gT3V0Qm9keVsobnVtKV0uTG9jWCk7DQoJCQkJCWZsb2F0IG51bTUgPSAoZmxvYXQpKEJvZHlbKGkpXS5Mb2NZIC0gT3V0Qm9keVsobnVtKV0uTG9jWSk7DQoJCQkJCWZsb2F0IG51bTYgPSBudW00ICogbnVtNCArIG51bTUgKiBudW01Ow0KCQkJCQlmbG9hdCBudW03ID0gKGZsb2F0KXNxcnQoKGRvdWJsZSludW02KTsNCgkJCQkJYm9vbCBmbGFnNCA9IG51bTcgPiAwLjBmOw0KCQkJCQlpZiAoZmxhZzQpDQoJCQkJCXsNCgkJCQkJCWZsb2F0IG1hc3MgPSBPdXRCb2R5WyhudW0pXS5NYXNzOw0KCQkJCQkJZmxvYXQgbWFzczIgPSBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCWZsb2F0IG51bTggPSBtYXNzICogbWFzczI7DQoJCQkJCQlmbG9hdCBudW05ID0gbnVtOCAvIChudW03ICogbnVtNyArIG51bTIgKiBudW0yKTsNCgkJCQkJCWZsb2F0IG51bTEwID0gbnVtOSAqIG51bTQgLyBudW03Ow0KCQkJCQkJZmxvYXQgbnVtMTEgPSBudW05ICogbnVtNSAvIG51bTc7DQoJCQkJCQlpbnQgZXhwcl8xN0NfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJT3V0Qm9keVsoZXhwcl8xN0NfY3BfMF9jcF8xKV0uRm9yY2VUb3QgPSBPdXRCb2R5WyhleHByXzE3Q19jcF8wX2NwXzEpXS5Gb3JjZVRvdCArIG51bTk7DQoJCQkJCQlpbnQgZXhwcl8xOTFfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJT3V0Qm9keVsoZXhwcl8xOTFfY3BfMF9jcF8xKV0uRm9yY2VYID0gT3V0Qm9keVsoZXhwcl8xOTFfY3BfMF9jcF8xKV0uRm9yY2VYICsgbnVtMTA7DQoJCQkJCQlpbnQgZXhwcl8xQTZfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJT3V0Qm9keVsoZXhwcl8xQTZfY3BfMF9jcF8xKV0uRm9yY2VZID0gT3V0Qm9keVsoZXhwcl8xQTZfY3BfMF9jcF8xKV0uRm9yY2VZICsgbnVtMTE7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCQliYXJyaWVyKENMS19MT0NBTF9NRU1fRkVOQ0UpOw0KCQl9DQoJfQ0KfQ0KLy8gUGh5c2ljc19FbmdpbmUuQ1VEQQ0KX19rZXJuZWwgIHZvaWQgQ29sbGlkZUJvZGllcyhnbG9iYWwgc3RydWN0IENVREFQcmltX1N0cnVjdCogQm9keSwgaW50IEJvZHlMZW4wLCBnbG9iYWwgc3RydWN0IENVREFQcmltX1N0cnVjdCogQ29sQm9keSwgaW50IENvbEJvZHlMZW4wLCBmbG9hdCBUaW1lU3RlcCkNCnsNCglpbnQgbnVtID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJYm9vbCBmbGFnID0gbnVtIDw9IEJvZHlMZW4wIC0gMSAmIEJvZHlbKG51bSldLlZpc2libGUgPT0gMTsNCglpZiAoZmxhZykNCgl7DQoJCUNvbEJvZHlbKG51bSldID0gQm9keVsobnVtKV07DQoJCWludCBudW0yID0gQm9keUxlbjAgLSAxOw0KCQlmb3IgKGludCBpID0gMDsgaSA8PSBudW0yOyBpKyspDQoJCXsNCgkJCWJvb2wgZmxhZzIgPSBudW0gIT0gaSAmIEJvZHlbKGkpXS5WaXNpYmxlID09IDE7DQoJCQlpZiAoZmxhZzIpDQoJCQl7DQoJCQkJZmxvYXQgbnVtMyA9IChmbG9hdCkoQm9keVsoaSldLkxvY1ggLSBDb2xCb2R5WyhudW0pXS5Mb2NYKTsNCgkJCQlmbG9hdCBudW00ID0gKGZsb2F0KShCb2R5WyhpKV0uTG9jWSAtIENvbEJvZHlbKG51bSldLkxvY1kpOw0KCQkJCWZsb2F0IG51bTUgPSBudW0zICogbnVtMyArIG51bTQgKiBudW00Ow0KCQkJCWZsb2F0IG51bTYgPSAoZmxvYXQpc3FydCgoZG91YmxlKW51bTUpOw0KCQkJCWJvb2wgZmxhZzMgPSAoZG91YmxlKW51bTYgPD0gQ29sQm9keVsobnVtKV0uU2l6ZSAvIDIuMCArIEJvZHlbKGkpXS5TaXplIC8gMi4wOw0KCQkJCWlmIChmbGFnMykNCgkJCQl7DQoJCQkJCUNvbEJvZHlbKG51bSldLkxhc3RDb2xJRCA9IGk7DQoJCQkJCWJvb2wgZmxhZzQgPSBudW02ID4gMC4wZjsNCgkJCQkJaWYgKGZsYWc0KQ0KCQkJCQl7DQoJCQkJCQlmbG9hdCBzcGVlZFggPSBDb2xCb2R5WyhudW0pXS5TcGVlZFg7DQoJCQkJCQlmbG9hdCBzcGVlZFkgPSBDb2xCb2R5WyhudW0pXS5TcGVlZFk7DQoJCQkJCQlmbG9hdCBzcGVlZFgyID0gQm9keVsoaSldLlNwZWVkWDsNCgkJCQkJCWZsb2F0IHNwZWVkWTIgPSBCb2R5WyhpKV0uU3BlZWRZOw0KCQkJCQkJZmxvYXQgbWFzcyA9IENvbEJvZHlbKG51bSldLk1hc3M7DQoJCQkJCQlmbG9hdCBtYXNzMiA9IEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJZmxvYXQgbnVtNyA9IG51bTMgLyAyLjBmOw0KCQkJCQkJZmxvYXQgbnVtOCA9IG51bTQgLyAyLjBmOw0KCQkJCQkJbnVtNyAvPSBudW02IC8gMi4wZjsNCgkJCQkJCW51bTggLz0gbnVtNiAvIDIuMGY7DQoJCQkJCQlmbG9hdCBudW05ID0gbnVtNyAqIHNwZWVkWCArIG51bTggKiBzcGVlZFk7DQoJCQkJCQlmbG9hdCBudW0xMCA9IG51bTcgKiBzcGVlZFgyICsgbnVtOCAqIHNwZWVkWTI7DQoJCQkJCQlmbG9hdCBudW0xMSA9IChtYXNzICogbnVtOSArIG1hc3MyICogbnVtMTAgLSBtYXNzMiAqIChudW05IC0gbnVtMTApKSAvIChtYXNzICsgbWFzczIpOw0KCQkJCQkJZmxvYXQgbnVtMTIgPSAobWFzcyAqIG51bTkgKyBtYXNzMiAqIG51bTEwIC0gbWFzcyAqIChudW0xMCAtIG51bTkpKSAvIChtYXNzICsgbWFzczIpOw0KCQkJCQkJYm9vbCBmbGFnNSA9IENvbEJvZHlbKG51bSldLkluUm9jaGUgPT0gMCAmIEJvZHlbKGkpXS5JblJvY2hlID09IDE7DQoJCQkJCQlpZiAoZmxhZzUpDQoJCQkJCQl7DQoJCQkJCQkJYm9vbCBmbGFnNiA9IENvbEJvZHlbKG51bSldLk1hc3MgPiBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQlpZiAoZmxhZzYpDQoJCQkJCQkJew0KCQkJCQkJCQlmbG9hdCBzcGVlZFgzID0gQ29sQm9keVsobnVtKV0uU3BlZWRYOw0KCQkJCQkJCQlmbG9hdCBzcGVlZFkzID0gQ29sQm9keVsobnVtKV0uU3BlZWRZOw0KCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5TcGVlZFggPSBDb2xCb2R5WyhudW0pXS5TcGVlZFggKyAobnVtMTEgLSBudW05KSAqIG51bTc7DQoJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNwZWVkWSA9IENvbEJvZHlbKG51bSldLlNwZWVkWSArIChudW0xMSAtIG51bTkpICogbnVtODsNCgkJCQkJCQkJZmxvYXQgbnVtMTMgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCWZsb2F0IG51bTE0ID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApKTsNCgkJCQkJCQkJbnVtMTMgKz0gbnVtMTQ7DQoJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMTMgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJQ29sQm9keVsobnVtKV0uTWFzcyA9IENvbEJvZHlbKG51bSldLk1hc3MgKyBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQl9DQoJCQkJCQkJZWxzZQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnNyA9IENvbEJvZHlbKG51bSldLk1hc3MgPT0gQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJCWlmIChmbGFnNykNCgkJCQkJCQkJew0KCQkJCQkJCQkJYm9vbCBmbGFnOCA9IENvbEJvZHlbKG51bSldLlVJRCA+IEJvZHlbKGkpXS5VSUQ7DQoJCQkJCQkJCQlpZiAoZmxhZzgpDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJZmxvYXQgc3BlZWRYMyA9IENvbEJvZHlbKG51bSldLlNwZWVkWDsNCgkJCQkJCQkJCQlmbG9hdCBzcGVlZFkzID0gQ29sQm9keVsobnVtKV0uU3BlZWRZOw0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNwZWVkWCA9IENvbEJvZHlbKG51bSldLlNwZWVkWCArIChudW0xMSAtIG51bTkpICogbnVtNzsNCgkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5TcGVlZFkgPSBDb2xCb2R5WyhudW0pXS5TcGVlZFkgKyAobnVtMTEgLSBudW05KSAqIG51bTg7DQoJCQkJCQkJCQkJZmxvYXQgbnVtMTMgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQkJZmxvYXQgbnVtMTQgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCQkJCW51bTEzICs9IG51bTE0Ow0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMTMgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5NYXNzID0gQ29sQm9keVsobnVtKV0uTWFzcyArIEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQkJZWxzZQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQl9DQoJCQkJCQkJCWVsc2UNCgkJCQkJCQkJew0KCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQkJCX0NCgkJCQkJCQl9DQoJCQkJCQl9DQoJCQkJCQllbHNlDQoJCQkJCQl7DQoJCQkJCQkJYm9vbCBmbGFnOSA9IENvbEJvZHlbKG51bSldLkluUm9jaGUgPT0gMCAmIEJvZHlbKGkpXS5JblJvY2hlID09IDA7DQoJCQkJCQkJaWYgKGZsYWc5KQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnMTAgPSBDb2xCb2R5WyhudW0pXS5NYXNzID4gQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJCWlmIChmbGFnMTApDQoJCQkJCQkJCXsNCgkJCQkJCQkJCWZsb2F0IHNwZWVkWDMgPSBDb2xCb2R5WyhudW0pXS5TcGVlZFg7DQoJCQkJCQkJCQlmbG9hdCBzcGVlZFkzID0gQ29sQm9keVsobnVtKV0uU3BlZWRZOw0KCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uU3BlZWRYID0gQ29sQm9keVsobnVtKV0uU3BlZWRYICsgKG51bTExIC0gbnVtOSkgKiBudW03Ow0KCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uU3BlZWRZID0gQ29sQm9keVsobnVtKV0uU3BlZWRZICsgKG51bTExIC0gbnVtOSkgKiBudW04Ow0KCQkJCQkJCQkJZmxvYXQgbnVtMTMgPSAoZmxvYXQpKDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQlmbG9hdCBudW0xNCA9IChmbG9hdCkoMy4xNDE1OTI2NTM1ODk3OSAqIHBvdyhCb2R5WyhpKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlNpemUgPSBzcXJ0KChkb3VibGUpbnVtMTMgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQkJCUNvbEJvZHlbKG51bSldLk1hc3MgPSBDb2xCb2R5WyhudW0pXS5NYXNzICsgQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib29sIGZsYWcxMSA9IENvbEJvZHlbKG51bSldLk1hc3MgPT0gQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJCQlpZiAoZmxhZzExKQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCWJvb2wgZmxhZzEyID0gQ29sQm9keVsobnVtKV0uVUlEID4gQm9keVsoaSldLlVJRDsNCgkJCQkJCQkJCQlpZiAoZmxhZzEyKQ0KCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJZmxvYXQgc3BlZWRYMyA9IENvbEJvZHlbKG51bSldLlNwZWVkWDsNCgkJCQkJCQkJCQkJZmxvYXQgc3BlZWRZMyA9IENvbEJvZHlbKG51bSldLlNwZWVkWTsNCgkJCQkJCQkJCQkJQ29sQm9keVsobnVtKV0uU3BlZWRYID0gQ29sQm9keVsobnVtKV0uU3BlZWRYICsgKG51bTExIC0gbnVtOSkgKiBudW03Ow0KCQkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5TcGVlZFkgPSBDb2xCb2R5WyhudW0pXS5TcGVlZFkgKyAobnVtMTEgLSBudW05KSAqIG51bTg7DQoJCQkJCQkJCQkJCWZsb2F0IG51bTEzID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCQkJCQlmbG9hdCBudW0xNCA9IChmbG9hdCkoMy4xNDE1OTI2NTM1ODk3OSAqIHBvdyhCb2R5WyhpKV0uU2l6ZSwgMi4wKSk7DQoJCQkJCQkJCQkJCW51bTEzICs9IG51bTE0Ow0KCQkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5TaXplID0gc3FydCgoZG91YmxlKW51bTEzIC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLk1hc3MgPSBDb2xCb2R5WyhudW0pXS5NYXNzICsgQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJCQkJfQ0KCQkJCQkJCQkJCWVsc2UNCgkJCQkJCQkJCQl7DQoJCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJCX0NCgkJCQkJCQkJCX0NCgkJCQkJCQkJCWVsc2UNCgkJCQkJCQkJCXsNCgkJCQkJCQkJCQlDb2xCb2R5WyhudW0pXS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJCX0NCgkJCQkJCQkJfQ0KCQkJCQkJCX0NCgkJCQkJCQllbHNlDQoJCQkJCQkJew0KCQkJCQkJCQlib29sIGZsYWcxMyA9IENvbEJvZHlbKG51bSldLkluUm9jaGUgPT0gMSAmIEJvZHlbKGkpXS5JblJvY2hlID09IDE7DQoJCQkJCQkJCWlmIChmbGFnMTMpDQoJCQkJCQkJCXsNCgkJCQkJCQkJCW1hc3MgPSBDb2xCb2R5WyhudW0pXS5NYXNzOw0KCQkJCQkJCQkJbWFzczIgPSBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQkJCWZsb2F0IG51bTE1ID0gbWFzcyAqIG1hc3MyOw0KCQkJCQkJCQkJZmxvYXQgbnVtMTYgPSAoZmxvYXQpKChkb3VibGUpbnVtMTUgLyAoKGRvdWJsZSkobnVtNiAqIG51bTYpICsgKENvbEJvZHlbKG51bSldLlNpemUgLyAyLjAgKyBCb2R5WyhpKV0uU2l6ZSAvIDIuMCkpKTsNCgkJCQkJCQkJCWZsb2F0IG51bTE3ID0gbnVtMTYgKiBudW0zIC8gbnVtNjsNCgkJCQkJCQkJCWZsb2F0IG51bTE4ID0gbnVtMTYgKiBudW00IC8gbnVtNjsNCgkJCQkJCQkJCWludCBudW0xOSA9IChpbnQpcmludCg0MC4wIC0gc3FydCgoZG91YmxlKUNvbEJvZHlbKG51bSldLk1hc3MpICogMi4wIC0gKGRvdWJsZSkoVGltZVN0ZXAgKiAxMDAwLjBmKSk7DQoJCQkJCQkJCQlpbnQgZXhwcl84OTVfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84OTVfY3BfMF9jcF8xKV0uRm9yY2VYID0gQ29sQm9keVsoZXhwcl84OTVfY3BfMF9jcF8xKV0uRm9yY2VYIC0gbnVtMTcgKiAoZmxvYXQpbnVtMTk7DQoJCQkJCQkJCQlpbnQgZXhwcl84QjBfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84QjBfY3BfMF9jcF8xKV0uRm9yY2VZID0gQ29sQm9keVsoZXhwcl84QjBfY3BfMF9jcF8xKV0uRm9yY2VZIC0gbnVtMTggKiAoZmxvYXQpbnVtMTk7DQoJCQkJCQkJCQlkb3VibGUgbnVtMjAgPSAwLjU7DQoJCQkJCQkJCQlpbnQgZXhwcl84RDZfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84RDZfY3BfMF9jcF8xKV0uU3BlZWRYID0gKGZsb2F0KSgoZG91YmxlKUNvbEJvZHlbKGV4cHJfOEQ2X2NwXzBfY3BfMSldLlNwZWVkWCArIChkb3VibGUpKChudW0xMSAtIG51bTkpICogbnVtNykgKiBudW0yMCk7DQoJCQkJCQkJCQlpbnQgZXhwcl84RjhfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84RjhfY3BfMF9jcF8xKV0uU3BlZWRZID0gKGZsb2F0KSgoZG91YmxlKUNvbEJvZHlbKGV4cHJfOEY4X2NwXzBfY3BfMSldLlNwZWVkWSArIChkb3VibGUpKChudW0xMSAtIG51bTkpICogbnVtOCkgKiBudW0yMCk7DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib29sIGZsYWcxNCA9IENvbEJvZHlbKG51bSldLkluUm9jaGUgPT0gMSAmIEJvZHlbKGkpXS5JblJvY2hlID09IDA7DQoJCQkJCQkJCQlpZiAoZmxhZzE0KQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQl9DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJCWVsc2UNCgkJCQkJew0KCQkJCQkJYm9vbCBmbGFnMTUgPSBDb2xCb2R5WyhudW0pXS5NYXNzID4gQm9keVsoaSldLk1hc3M7DQoJCQkJCQlpZiAoZmxhZzE1KQ0KCQkJCQkJew0KCQkJCQkJCWZsb2F0IG51bTEzID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bSldLlNpemUsIDIuMCkpOw0KCQkJCQkJCWZsb2F0IG51bTE0ID0gKGZsb2F0KSgzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApKTsNCgkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQlDb2xCb2R5WyhudW0pXS5TaXplID0gc3FydCgoZG91YmxlKW51bTEzIC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJQ29sQm9keVsobnVtKV0uTWFzcyA9IENvbEJvZHlbKG51bSldLk1hc3MgKyBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCX0NCgkJCQkJCWVsc2UNCgkJCQkJCXsNCgkJCQkJCQlDb2xCb2R5WyhudW0pXS5WaXNpYmxlID0gMDsNCgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCQlpbnQgZXhwcl9BNDRfY3BfMF9jcF8xID0gbnVtOw0KCQlDb2xCb2R5WyhleHByX0E0NF9jcF8wX2NwXzEpXS5TcGVlZFggPSBDb2xCb2R5WyhleHByX0E0NF9jcF8wX2NwXzEpXS5TcGVlZFggKyBUaW1lU3RlcCAqIENvbEJvZHlbKG51bSldLkZvcmNlWCAvIENvbEJvZHlbKG51bSldLk1hc3M7DQoJCWludCBleHByX0E3Nl9jcF8wX2NwXzEgPSBudW07DQoJCUNvbEJvZHlbKGV4cHJfQTc2X2NwXzBfY3BfMSldLlNwZWVkWSA9IENvbEJvZHlbKGV4cHJfQTc2X2NwXzBfY3BfMSldLlNwZWVkWSArIFRpbWVTdGVwICogQ29sQm9keVsobnVtKV0uRm9yY2VZIC8gQ29sQm9keVsobnVtKV0uTWFzczsNCgkJaW50IGV4cHJfQUE4X2NwXzBfY3BfMSA9IG51bTsNCgkJQ29sQm9keVsoZXhwcl9BQThfY3BfMF9jcF8xKV0uTG9jWCA9IENvbEJvZHlbKGV4cHJfQUE4X2NwXzBfY3BfMSldLkxvY1ggKyAoZG91YmxlKShUaW1lU3RlcCAqIENvbEJvZHlbKG51bSldLlNwZWVkWCk7DQoJCWludCBleHByX0FDRF9jcF8wX2NwXzEgPSBudW07DQoJCUNvbEJvZHlbKGV4cHJfQUNEX2NwXzBfY3BfMSldLkxvY1kgPSBDb2xCb2R5WyhleHByX0FDRF9jcF8wX2NwXzEpXS5Mb2NZICsgKGRvdWJsZSkoVGltZVN0ZXAgKiBDb2xCb2R5WyhudW0pXS5TcGVlZFkpOw0KCX0NCn0NCg==</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="CalcPhysics" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>921666381</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Single" Name="TimeStep" Position="2" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="OutBody" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CollideBodies" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>921666381</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="Body" Position="1" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="ColBody" Position="2" />
        <Parameter Type="System.Single" Name="TimeStep" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types>
    <CudafyType Name="Prim_Struct" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA+Prim_Struct</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>921666381</Checksum>
    </CudafyType>
  </Types>
</CudafyModule>