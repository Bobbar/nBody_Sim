<?xml version="1.0" encoding="utf-8"?>
<CudafyModule Version="1.29.5576.13786" Name="CUDA" DebugInfo="false" HasCudaSourceCode="false" HasPTX="false" HasBinary="false">
  <CudaSourceCode></CudaSourceCode>
  <PTXMODULES />
  <BinaryModules />
  <SourceCodes>
    <SourceCodeFile ID="baff02cf-3cea-43b1-9861-b2e1bbd9a2b4" Language="OpenCL" Arch="OpenCL">I2lmIGRlZmluZWQoY2xfa2hyX2ZwNjQpDQojcHJhZ21hIE9QRU5DTCBFWFRFTlNJT04gY2xfa2hyX2ZwNjQ6IGVuYWJsZQ0KI2VsaWYgZGVmaW5lZChjbF9hbWRfZnA2NCkNCiNwcmFnbWEgT1BFTkNMIEVYVEVOU0lPTiBjbF9hbWRfZnA2NDogZW5hYmxlDQojZW5kaWYNCnN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QNCnsNCglkb3VibGUgTG9jWDsNCglkb3VibGUgTG9jWTsNCglkb3VibGUgTWFzczsNCglkb3VibGUgU3BlZWRYOw0KCWRvdWJsZSBTcGVlZFk7DQoJZG91YmxlIEZvcmNlWDsNCglkb3VibGUgRm9yY2VZOw0KCWRvdWJsZSBGb3JjZVRvdDsNCglpbnQgQ29sb3I7DQoJZG91YmxlIFNpemU7DQoJaW50IFZpc2libGU7DQoJaW50IEluUm9jaGU7DQoJaW50IEJsYWNrSG9sZTsNCglsb25nIFVJRDsNCglpbnQgVGhyZWFkSUQ7DQoJaW50IEJsb2NrSUQ7DQoJaW50IEJsb2NrRElNOw0KCWludCBMYXN0Q29sSUQ7DQp9Ow0KDQoNCi8vIFBoeXNpY3NfRW5naW5lLkNVREENCl9fa2VybmVsICB2b2lkIENhbGNQaHlzaWNzKGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBCb2R5LCBpbnQgQm9keUxlbjAsIGRvdWJsZSBUaW1lU3RlcCwgZ2xvYmFsIHN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QqIE91dEJvZHksIGludCBPdXRCb2R5TGVuMCk7DQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBDb2xsaWRlQm9kaWVzKGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBCb2R5LCBpbnQgQm9keUxlbjAsIGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBDb2xCb2R5LCBpbnQgQ29sQm9keUxlbjAsIGRvdWJsZSBUaW1lU3RlcCk7DQoNCi8vIFBoeXNpY3NfRW5naW5lLkNVREENCl9fa2VybmVsICB2b2lkIENhbGNQaHlzaWNzKGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBCb2R5LCBpbnQgQm9keUxlbjAsIGRvdWJsZSBUaW1lU3RlcCwgZ2xvYmFsIHN0cnVjdCBDVURBUHJpbV9TdHJ1Y3QqIE91dEJvZHksIGludCBPdXRCb2R5TGVuMCkNCnsNCglpbnQgbnVtID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJZG91YmxlIG51bTIgPSAxLjAyOw0KCWJvb2wgZmxhZyA9IG51bSA8PSBCb2R5TGVuMCAtIDE7DQoJaWYgKGZsYWcpDQoJew0KCQlPdXRCb2R5WyhudW0pXSA9IEJvZHlbKG51bSldOw0KCQlib29sIGZsYWcyID0gQm9keVsobnVtKV0uVmlzaWJsZSA9PSAxOw0KCQlpZiAoZmxhZzIpDQoJCXsNCgkJCU91dEJvZHlbKG51bSldLlRocmVhZElEID0gZ2V0X2xvY2FsX2lkKDApOw0KCQkJT3V0Qm9keVsobnVtKV0uQmxvY2tJRCA9IGdldF9ncm91cF9pZCgwKTsNCgkJCU91dEJvZHlbKG51bSldLkJsb2NrRElNID0gZ2V0X2xvY2FsX3NpemUoMCk7DQoJCQlPdXRCb2R5WyhudW0pXS5Gb3JjZVggPSAwLjA7DQoJCQlPdXRCb2R5WyhudW0pXS5Gb3JjZVkgPSAwLjA7DQoJCQlPdXRCb2R5WyhudW0pXS5Gb3JjZVRvdCA9IDAuMDsNCgkJCWludCBudW0zID0gQm9keUxlbjAgLSAxOw0KCQkJZm9yIChpbnQgaSA9IDA7IGkgPD0gbnVtMzsgaSsrKQ0KCQkJew0KCQkJCWJvb2wgZmxhZzMgPSBudW0gIT0gaSAmIEJvZHlbKGkpXS5WaXNpYmxlID09IDE7DQoJCQkJaWYgKGZsYWczKQ0KCQkJCXsNCgkJCQkJZG91YmxlIG51bTQgPSBCb2R5WyhpKV0uTG9jWCAtIE91dEJvZHlbKG51bSldLkxvY1g7DQoJCQkJCWRvdWJsZSBudW01ID0gQm9keVsoaSldLkxvY1kgLSBPdXRCb2R5WyhudW0pXS5Mb2NZOw0KCQkJCQlkb3VibGUgZCA9IG51bTQgKiBudW00ICsgbnVtNSAqIG51bTU7DQoJCQkJCWRvdWJsZSBudW02ID0gc3FydChkKTsNCgkJCQkJYm9vbCBmbGFnNCA9IG51bTYgPiAwLjA7DQoJCQkJCWlmIChmbGFnNCkNCgkJCQkJew0KCQkJCQkJZG91YmxlIG1hc3MgPSBPdXRCb2R5WyhudW0pXS5NYXNzOw0KCQkJCQkJZG91YmxlIG1hc3MyID0gQm9keVsoaSldLk1hc3M7DQoJCQkJCQlkb3VibGUgbnVtNyA9IG1hc3MgKiBtYXNzMjsNCgkJCQkJCWRvdWJsZSBudW04ID0gbnVtNyAvIChudW02ICogbnVtNiArIG51bTIgKiBudW0yKTsNCgkJCQkJCWRvdWJsZSBudW05ID0gbnVtOCAqIG51bTQgLyBudW02Ow0KCQkJCQkJZG91YmxlIG51bTEwID0gbnVtOCAqIG51bTUgLyBudW02Ow0KCQkJCQkJaW50IGV4cHJfMUQxX2NwXzBfY3BfMSA9IG51bTsNCgkJCQkJCU91dEJvZHlbKGV4cHJfMUQxX2NwXzBfY3BfMSldLkZvcmNlVG90ID0gT3V0Qm9keVsoZXhwcl8xRDFfY3BfMF9jcF8xKV0uRm9yY2VUb3QgKyBudW04Ow0KCQkJCQkJaW50IGV4cHJfMUU2X2NwXzBfY3BfMSA9IG51bTsNCgkJCQkJCU91dEJvZHlbKGV4cHJfMUU2X2NwXzBfY3BfMSldLkZvcmNlWCA9IE91dEJvZHlbKGV4cHJfMUU2X2NwXzBfY3BfMSldLkZvcmNlWCArIG51bTk7DQoJCQkJCQlpbnQgZXhwcl8xRkJfY3BfMF9jcF8xID0gbnVtOw0KCQkJCQkJT3V0Qm9keVsoZXhwcl8xRkJfY3BfMF9jcF8xKV0uRm9yY2VZID0gT3V0Qm9keVsoZXhwcl8xRkJfY3BfMF9jcF8xKV0uRm9yY2VZICsgbnVtMTA7DQoJCQkJCX0NCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQp9DQovLyBQaHlzaWNzX0VuZ2luZS5DVURBDQpfX2tlcm5lbCAgdm9pZCBDb2xsaWRlQm9kaWVzKGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBCb2R5LCBpbnQgQm9keUxlbjAsIGdsb2JhbCBzdHJ1Y3QgQ1VEQVByaW1fU3RydWN0KiBDb2xCb2R5LCBpbnQgQ29sQm9keUxlbjAsIGRvdWJsZSBUaW1lU3RlcCkNCnsNCglkb3VibGUgbnVtID0gMi4wOw0KCWludCBudW0yID0gZ2V0X2xvY2FsX3NpemUoMCkgKiBnZXRfZ3JvdXBfaWQoMCkgKyBnZXRfbG9jYWxfaWQoMCk7DQoJYm9vbCBmbGFnID0gbnVtMiA8PSBCb2R5TGVuMCAtIDEgJiBCb2R5WyhudW0yKV0uVmlzaWJsZSA9PSAxOw0KCWlmIChmbGFnKQ0KCXsNCgkJQ29sQm9keVsobnVtMildID0gQm9keVsobnVtMildOw0KCQlpbnQgbnVtMyA9IEJvZHlMZW4wIC0gMTsNCgkJZm9yIChpbnQgaSA9IDA7IGkgPD0gbnVtMzsgaSsrKQ0KCQl7DQoJCQlib29sIGZsYWcyID0gbnVtMiAhPSBpICYgQm9keVsoaSldLlZpc2libGUgPT0gMTsNCgkJCWlmIChmbGFnMikNCgkJCXsNCgkJCQlkb3VibGUgbnVtNCA9IEJvZHlbKGkpXS5Mb2NYIC0gQ29sQm9keVsobnVtMildLkxvY1g7DQoJCQkJZG91YmxlIG51bTUgPSBCb2R5WyhpKV0uTG9jWSAtIENvbEJvZHlbKG51bTIpXS5Mb2NZOw0KCQkJCWRvdWJsZSBkID0gbnVtNCAqIG51bTQgKyBudW01ICogbnVtNTsNCgkJCQlkb3VibGUgbnVtNiA9IHNxcnQoZCk7DQoJCQkJYm9vbCBmbGFnMyA9IG51bTYgPD0gQ29sQm9keVsobnVtMildLlNpemUgLyAyLjAgKyBCb2R5WyhpKV0uU2l6ZSAvIDIuMDsNCgkJCQlpZiAoZmxhZzMpDQoJCQkJew0KCQkJCQlib29sIGZsYWc0ID0gbnVtNiA+IDAuMDsNCgkJCQkJaWYgKGZsYWc0KQ0KCQkJCQl7DQoJCQkJCQlkb3VibGUgc3BlZWRYID0gQ29sQm9keVsobnVtMildLlNwZWVkWDsNCgkJCQkJCWRvdWJsZSBzcGVlZFkgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRZOw0KCQkJCQkJZG91YmxlIHNwZWVkWDIgPSBCb2R5WyhpKV0uU3BlZWRYOw0KCQkJCQkJZG91YmxlIHNwZWVkWTIgPSBCb2R5WyhpKV0uU3BlZWRZOw0KCQkJCQkJZG91YmxlIG1hc3MgPSBDb2xCb2R5WyhudW0yKV0uTWFzczsNCgkJCQkJCWRvdWJsZSBtYXNzMiA9IEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJZG91YmxlIG51bTcgPSBudW00IC8gMi4wOw0KCQkJCQkJZG91YmxlIG51bTggPSBudW01IC8gMi4wOw0KCQkJCQkJbnVtNyAvPSBudW02IC8gMi4wOw0KCQkJCQkJbnVtOCAvPSBudW02IC8gMi4wOw0KCQkJCQkJZG91YmxlIG51bTkgPSBudW03ICogc3BlZWRYICsgbnVtOCAqIHNwZWVkWTsNCgkJCQkJCWRvdWJsZSBudW0xMCA9IG51bTcgKiBzcGVlZFgyICsgbnVtOCAqIHNwZWVkWTI7DQoJCQkJCQlkb3VibGUgbnVtMTEgPSAobWFzcyAqIG51bTkgKyBtYXNzMiAqIG51bTEwIC0gbWFzczIgKiAobnVtOSAtIG51bTEwKSkgLyAobWFzcyArIG1hc3MyKTsNCgkJCQkJCWRvdWJsZSBudW0xMiA9IChtYXNzICogbnVtOSArIG1hc3MyICogbnVtMTAgLSBtYXNzICogKG51bTEwIC0gbnVtOSkpIC8gKG1hc3MgKyBtYXNzMik7DQoJCQkJCQlib29sIGZsYWc1ID0gQ29sQm9keVsobnVtMildLkluUm9jaGUgPT0gMCAmIEJvZHlbKGkpXS5JblJvY2hlID09IDE7DQoJCQkJCQlpZiAoZmxhZzUpDQoJCQkJCQl7DQoJCQkJCQkJYm9vbCBmbGFnNiA9IENvbEJvZHlbKG51bTIpXS5NYXNzID4gQm9keVsoaSldLk1hc3M7DQoJCQkJCQkJaWYgKGZsYWc2KQ0KCQkJCQkJCXsNCgkJCQkJCQkJZG91YmxlIHNwZWVkWDMgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRYOw0KCQkJCQkJCQlkb3VibGUgc3BlZWRZMyA9IENvbEJvZHlbKG51bTIpXS5TcGVlZFk7DQoJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TcGVlZFggPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRYICsgKG51bTExIC0gbnVtOSkgKiBudW03Ow0KCQkJCQkJCQlDb2xCb2R5WyhudW0yKV0uU3BlZWRZID0gQ29sQm9keVsobnVtMildLlNwZWVkWSArIChudW0xMSAtIG51bTkpICogbnVtODsNCgkJCQkJCQkJQm9keVsoaSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQlkb3VibGUgbnVtMTMgPSAzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bTIpXS5TaXplLCAyLjApOw0KCQkJCQkJCQlkb3VibGUgbnVtMTQgPSAzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApOw0KCQkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQkJQ29sQm9keVsobnVtMildLlNpemUgPSBzcXJ0KG51bTEzIC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5NYXNzID0gQ29sQm9keVsobnVtMildLk1hc3MgKyBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQl9DQoJCQkJCQkJZWxzZQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnNyA9IENvbEJvZHlbKG51bTIpXS5NYXNzID09IEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJCQlpZiAoZmxhZzcpDQoJCQkJCQkJCXsNCgkJCQkJCQkJCWJvb2wgZmxhZzggPSBDb2xCb2R5WyhudW0yKV0uVUlEID4gQm9keVsoaSldLlVJRDsNCgkJCQkJCQkJCWlmIChmbGFnOCkNCgkJCQkJCQkJCXsNCgkJCQkJCQkJCQlkb3VibGUgc3BlZWRYMyA9IENvbEJvZHlbKG51bTIpXS5TcGVlZFg7DQoJCQkJCQkJCQkJZG91YmxlIHNwZWVkWTMgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRZOw0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TcGVlZFggPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRYICsgKG51bTExIC0gbnVtOSkgKiBudW03Ow0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TcGVlZFkgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRZICsgKG51bTExIC0gbnVtOSkgKiBudW04Ow0KCQkJCQkJCQkJCUJvZHlbKGkpXS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJCQlkb3VibGUgbnVtMTMgPSAzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bTIpXS5TaXplLCAyLjApOw0KCQkJCQkJCQkJCWRvdWJsZSBudW0xNCA9IDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCk7DQoJCQkJCQkJCQkJbnVtMTMgKz0gbnVtMTQ7DQoJCQkJCQkJCQkJQ29sQm9keVsobnVtMildLlNpemUgPSBzcXJ0KG51bTEzIC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCQkJQ29sQm9keVsobnVtMildLk1hc3MgPSBDb2xCb2R5WyhudW0yKV0uTWFzcyArIEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJCQkJfQ0KCQkJCQkJCQkJZWxzZQ0KCQkJCQkJCQkJew0KCQkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5WaXNpYmxlID0gMDsNCgkJCQkJCQkJCX0NCgkJCQkJCQkJfQ0KCQkJCQkJCX0NCgkJCQkJCX0NCgkJCQkJCWVsc2UNCgkJCQkJCXsNCgkJCQkJCQlib29sIGZsYWc5ID0gQ29sQm9keVsobnVtMildLkluUm9jaGUgPT0gMCAmIEJvZHlbKGkpXS5JblJvY2hlID09IDA7DQoJCQkJCQkJaWYgKGZsYWc5KQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnMTAgPSBDb2xCb2R5WyhudW0yKV0uTWFzcyA+IEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJCQlpZiAoZmxhZzEwKQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlkb3VibGUgc3BlZWRYMyA9IENvbEJvZHlbKG51bTIpXS5TcGVlZFg7DQoJCQkJCQkJCQlkb3VibGUgc3BlZWRZMyA9IENvbEJvZHlbKG51bTIpXS5TcGVlZFk7DQoJCQkJCQkJCQlDb2xCb2R5WyhudW0yKV0uU3BlZWRYID0gQ29sQm9keVsobnVtMildLlNwZWVkWCArIChudW0xMSAtIG51bTkpICogbnVtNzsNCgkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TcGVlZFkgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRZICsgKG51bTExIC0gbnVtOSkgKiBudW04Ow0KCQkJCQkJCQkJQm9keVsoaSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJZG91YmxlIG51bTEzID0gMy4xNDE1OTI2NTM1ODk3OSAqIHBvdyhDb2xCb2R5WyhudW0yKV0uU2l6ZSwgMi4wKTsNCgkJCQkJCQkJCWRvdWJsZSBudW0xNCA9IDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQm9keVsoaSldLlNpemUsIDIuMCk7DQoJCQkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TaXplID0gc3FydChudW0xMyAvIDMuMTQxNTkyNjUzNTg5NzkpOw0KCQkJCQkJCQkJQ29sQm9keVsobnVtMildLk1hc3MgPSBDb2xCb2R5WyhudW0yKV0uTWFzcyArIEJvZHlbKGkpXS5NYXNzOw0KCQkJCQkJCQl9DQoJCQkJCQkJCWVsc2UNCgkJCQkJCQkJew0KCQkJCQkJCQkJYm9vbCBmbGFnMTEgPSBDb2xCb2R5WyhudW0yKV0uTWFzcyA9PSBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQkJCWlmIChmbGFnMTEpDQoJCQkJCQkJCQl7DQoJCQkJCQkJCQkJYm9vbCBmbGFnMTIgPSBDb2xCb2R5WyhudW0yKV0uVUlEID4gQm9keVsoaSldLlVJRDsNCgkJCQkJCQkJCQlpZiAoZmxhZzEyKQ0KCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJZG91YmxlIHNwZWVkWDMgPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRYOw0KCQkJCQkJCQkJCQlkb3VibGUgc3BlZWRZMyA9IENvbEJvZHlbKG51bTIpXS5TcGVlZFk7DQoJCQkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5TcGVlZFggPSBDb2xCb2R5WyhudW0yKV0uU3BlZWRYICsgKG51bTExIC0gbnVtOSkgKiBudW03Ow0KCQkJCQkJCQkJCQlDb2xCb2R5WyhudW0yKV0uU3BlZWRZID0gQ29sQm9keVsobnVtMildLlNwZWVkWSArIChudW0xMSAtIG51bTkpICogbnVtODsNCgkJCQkJCQkJCQkJQm9keVsoaSldLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJCQlkb3VibGUgbnVtMTMgPSAzLjE0MTU5MjY1MzU4OTc5ICogcG93KENvbEJvZHlbKG51bTIpXS5TaXplLCAyLjApOw0KCQkJCQkJCQkJCQlkb3VibGUgbnVtMTQgPSAzLjE0MTU5MjY1MzU4OTc5ICogcG93KEJvZHlbKGkpXS5TaXplLCAyLjApOw0KCQkJCQkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQkJCQkJQ29sQm9keVsobnVtMildLlNpemUgPSBzcXJ0KG51bTEzIC8gMy4xNDE1OTI2NTM1ODk3OSk7DQoJCQkJCQkJCQkJCUNvbEJvZHlbKG51bTIpXS5NYXNzID0gQ29sQm9keVsobnVtMildLk1hc3MgKyBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQkJCQl9DQoJCQkJCQkJCQkJZWxzZQ0KCQkJCQkJCQkJCXsNCgkJCQkJCQkJCQkJQ29sQm9keVsobnVtMildLlZpc2libGUgPSAwOw0KCQkJCQkJCQkJCX0NCgkJCQkJCQkJCX0NCgkJCQkJCQkJCWVsc2UNCgkJCQkJCQkJCXsNCgkJCQkJCQkJCQlDb2xCb2R5WyhudW0yKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQkJCQl9DQoJCQkJCQkJCX0NCgkJCQkJCQl9DQoJCQkJCQkJZWxzZQ0KCQkJCQkJCXsNCgkJCQkJCQkJYm9vbCBmbGFnMTMgPSBDb2xCb2R5WyhudW0yKV0uSW5Sb2NoZSA9PSAxICYgQm9keVsoaSldLkluUm9jaGUgPT0gMTsNCgkJCQkJCQkJaWYgKGZsYWcxMykNCgkJCQkJCQkJew0KCQkJCQkJCQkJbWFzcyA9IENvbEJvZHlbKG51bTIpXS5NYXNzOw0KCQkJCQkJCQkJbWFzczIgPSBCb2R5WyhpKV0uTWFzczsNCgkJCQkJCQkJCWRvdWJsZSBudW0xNSA9IG1hc3MgKiBtYXNzMjsNCgkJCQkJCQkJCWRvdWJsZSBudW0xNiA9IG51bTE1IC8gKG51bTYgKiBudW02ICsgbnVtICogbnVtKTsNCgkJCQkJCQkJCWRvdWJsZSBudW0xNyA9IG51bTE2ICogbnVtNCAvIG51bTY7DQoJCQkJCQkJCQlkb3VibGUgbnVtMTggPSBudW0xNiAqIG51bTUgLyBudW02Ow0KCQkJCQkJCQkJaW50IG51bTE5ID0gMjA7DQoJCQkJCQkJCQlpbnQgZXhwcl84NEVfY3BfMF9jcF8xID0gbnVtMjsNCgkJCQkJCQkJCUNvbEJvZHlbKGV4cHJfODRFX2NwXzBfY3BfMSldLkZvcmNlWCA9IENvbEJvZHlbKGV4cHJfODRFX2NwXzBfY3BfMSldLkZvcmNlWCAtIG51bTE3ICogKGRvdWJsZSludW0xOTsNCgkJCQkJCQkJCWludCBleHByXzg2OV9jcF8wX2NwXzEgPSBudW0yOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84NjlfY3BfMF9jcF8xKV0uRm9yY2VZID0gQ29sQm9keVsoZXhwcl84NjlfY3BfMF9jcF8xKV0uRm9yY2VZIC0gbnVtMTggKiAoZG91YmxlKW51bTE5Ow0KCQkJCQkJCQkJZG91YmxlIG51bTIwID0gMC4yOw0KCQkJCQkJCQkJaW50IGV4cHJfODhGX2NwXzBfY3BfMSA9IG51bTI7DQoJCQkJCQkJCQlDb2xCb2R5WyhleHByXzg4Rl9jcF8wX2NwXzEpXS5TcGVlZFggPSBDb2xCb2R5WyhleHByXzg4Rl9jcF8wX2NwXzEpXS5TcGVlZFggKyAobnVtMTEgLSBudW05KSAqIG51bTcgKiBudW0yMDsNCgkJCQkJCQkJCWludCBleHByXzhBRV9jcF8wX2NwXzEgPSBudW0yOw0KCQkJCQkJCQkJQ29sQm9keVsoZXhwcl84QUVfY3BfMF9jcF8xKV0uU3BlZWRZID0gQ29sQm9keVsoZXhwcl84QUVfY3BfMF9jcF8xKV0uU3BlZWRZICsgKG51bTExIC0gbnVtOSkgKiBudW04ICogbnVtMjA7DQoJCQkJCQkJCX0NCgkJCQkJCQkJZWxzZQ0KCQkJCQkJCQl7DQoJCQkJCQkJCQlib29sIGZsYWcxNCA9IENvbEJvZHlbKG51bTIpXS5JblJvY2hlID09IDEgJiBCb2R5WyhpKV0uSW5Sb2NoZSA9PSAwOw0KCQkJCQkJCQkJaWYgKGZsYWcxNCkNCgkJCQkJCQkJCXsNCgkJCQkJCQkJCQlDb2xCb2R5WyhudW0yKV0uVmlzaWJsZSA9IDA7DQoJCQkJCQkJCQl9DQoJCQkJCQkJCX0NCgkJCQkJCQl9DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQkJZWxzZQ0KCQkJCQl7DQoJCQkJCQlib29sIGZsYWcxNSA9IENvbEJvZHlbKG51bTIpXS5NYXNzID4gQm9keVsoaSldLk1hc3M7DQoJCQkJCQlpZiAoZmxhZzE1KQ0KCQkJCQkJew0KCQkJCQkJCWRvdWJsZSBudW0xMyA9IDMuMTQxNTkyNjUzNTg5NzkgKiBwb3coQ29sQm9keVsobnVtMildLlNpemUsIDIuMCk7DQoJCQkJCQkJZG91YmxlIG51bTE0ID0gMy4xNDE1OTI2NTM1ODk3OSAqIHBvdyhCb2R5WyhpKV0uU2l6ZSwgMi4wKTsNCgkJCQkJCQludW0xMyArPSBudW0xNDsNCgkJCQkJCQlDb2xCb2R5WyhudW0yKV0uU2l6ZSA9IHNxcnQobnVtMTMgLyAzLjE0MTU5MjY1MzU4OTc5KTsNCgkJCQkJCQlDb2xCb2R5WyhudW0yKV0uTWFzcyA9IENvbEJvZHlbKG51bTIpXS5NYXNzICsgQm9keVsoaSldLk1hc3M7DQoJCQkJCQl9DQoJCQkJCQllbHNlDQoJCQkJCQl7DQoJCQkJCQkJQ29sQm9keVsobnVtMildLlZpc2libGUgPSAwOw0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCWludCBleHByXzlGNF9jcF8wX2NwXzEgPSBudW0yOw0KCQlDb2xCb2R5WyhleHByXzlGNF9jcF8wX2NwXzEpXS5TcGVlZFggPSBDb2xCb2R5WyhleHByXzlGNF9jcF8wX2NwXzEpXS5TcGVlZFggKyBUaW1lU3RlcCAqIENvbEJvZHlbKG51bTIpXS5Gb3JjZVggLyBDb2xCb2R5WyhudW0yKV0uTWFzczsNCgkJaW50IGV4cHJfQTI2X2NwXzBfY3BfMSA9IG51bTI7DQoJCUNvbEJvZHlbKGV4cHJfQTI2X2NwXzBfY3BfMSldLlNwZWVkWSA9IENvbEJvZHlbKGV4cHJfQTI2X2NwXzBfY3BfMSldLlNwZWVkWSArIFRpbWVTdGVwICogQ29sQm9keVsobnVtMildLkZvcmNlWSAvIENvbEJvZHlbKG51bTIpXS5NYXNzOw0KCQlpbnQgZXhwcl9BNThfY3BfMF9jcF8xID0gbnVtMjsNCgkJQ29sQm9keVsoZXhwcl9BNThfY3BfMF9jcF8xKV0uTG9jWCA9IENvbEJvZHlbKGV4cHJfQTU4X2NwXzBfY3BfMSldLkxvY1ggKyBUaW1lU3RlcCAqIENvbEJvZHlbKG51bTIpXS5TcGVlZFg7DQoJCWludCBleHByX0E3Q19jcF8wX2NwXzEgPSBudW0yOw0KCQlDb2xCb2R5WyhleHByX0E3Q19jcF8wX2NwXzEpXS5Mb2NZID0gQ29sQm9keVsoZXhwcl9BN0NfY3BfMF9jcF8xKV0uTG9jWSArIFRpbWVTdGVwICogQ29sQm9keVsobnVtMildLlNwZWVkWTsNCgl9DQoJYmFycmllcihDTEtfTE9DQUxfTUVNX0ZFTkNFKTsNCn0NCg==</SourceCodeFile>
  </SourceCodes>
  <Functions>
    <CudafyKernelMethod Name="CalcPhysics" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2718531863</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="Body" Position="1" />
        <Parameter Type="System.Double" Name="TimeStep" Position="2" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="OutBody" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
    <CudafyKernelMethod Name="CollideBodies" Type="Global" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2718531863</Checksum>
      <Parameters>
        <ReturnType>System.Void</ReturnType>
        <Parameter Type="Cudafy.GThread" Name="gpThread" Position="0" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="Body" Position="1" />
        <Parameter Type="Physics_Engine.CUDA+Prim_Struct[]" Name="ColBody" Position="2" />
        <Parameter Type="System.Double" Name="TimeStep" Position="3" />
      </Parameters>
    </CudafyKernelMethod>
  </Functions>
  <Constants />
  <Types>
    <CudafyType Name="Prim_Struct" IsDummy="false" DummyBehaviour="Default">
      <Type>Physics_Engine.CUDA+Prim_Struct</Type>
      <Assembly>Gravity Physics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</Assembly>
      <AssemblyName>Gravity Physics</AssemblyName>
      <AssemblyPath>C:\GitHub\Physics Engine - Copy\Physics-2\bin\Debug\Gravity Physics.exe</AssemblyPath>
      <Checksum>2718531863</Checksum>
    </CudafyType>
  </Types>
</CudafyModule>